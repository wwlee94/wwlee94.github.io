{"componentChunkName":"component---src-templates-post-tsx","path":"/category/algorithm/2018-kakao/n진수게임/","webpackCompilationHash":"cb61220e0f13304ecbd4","result":{"data":{"site":{"siteMetadata":{"title":"Blausee 기술 블로그","author":"wwlee94","siteUrl":"https://wwlee94.github.io"}},"markdownRemark":{"id":"aec030d7-fdf3-5e12-89e2-159c3a11b575","excerpt":"문제 튜브가 활동하는 코딩 동아리에서는 전통적으로 해오는 게임이 있다. 이 게임은 여러 사람이 둥글게 앉아서 숫자를 하나씩 차례대로 말하는 게임인데, 규칙은 다음과 같다. 숫자를 0부터 시작해서 차례대로 말한다. 첫 번째 사람은 0, 두 번째 사람은 1, … 열 번째 사람은…","html":"<h2>문제</h2>\n<p>튜브가 활동하는 코딩 동아리에서는 전통적으로 해오는 게임이 있다.<br>\n이 게임은 여러 사람이 둥글게 앉아서 숫자를 하나씩 차례대로 말하는 게임인데, 규칙은 다음과 같다.</p>\n<p>숫자를 0부터 시작해서 차례대로 말한다.<br>\n첫 번째 사람은 0, 두 번째 사람은 1, … 열 번째 사람은 9를 말한다.<br>\n10 이상의 숫자부터는 한 자리씩 끊어서 말한다.<br>\n즉 열한 번째 사람은 10의 첫 자리인 1, 열두 번째 사람은 둘째 자리인 0을 말한다.</p>\n<p>이렇게 게임을 진행할 경우,<br>\n<code class=\"language-text\">0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 0, 1, 1, 1, 2, 1, 3, 1, 4, …</code><br>\n순으로 숫자를 말하면 된다.</p>\n<p>한편 코딩 동아리 일원들은 컴퓨터를 다루는 사람답게 이진수로 이 게임을 진행하기도 하는데, 이 경우에는<br>\n<code class=\"language-text\">0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, …</code><br>\n순으로 숫자를 말하면 된다.</p>\n<p>이진수로 진행하는 게임에 익숙해져 질려가던 사람들은 좀 더 난이도를 높이기 위해 이진법에서 십육진법까지 모든 진법으로 게임을 진행해보기로 했다.<br>\n숫자 게임이 익숙하지 않은 튜브는 게임에 져서 벌칙을 받는 굴욕을 피하기 위해, 자신이 말해야 하는 숫자를 스마트폰에 미리 출력해주는 프로그램을 만들려고 한다.<br>\n튜브의 프로그램을 구현하라.</p>\n<h4>입력 형식</h4>\n<p>진법 <code class=\"language-text\">n</code>, 미리 구할 숫자의 갯수 <code class=\"language-text\">t</code>, 게임에 참가하는 인원 <code class=\"language-text\">m</code>, 튜브의 순서 <code class=\"language-text\">p</code> 가 주어진다.</p>\n<ul>\n<li>2 ≦ <code class=\"language-text\">n</code> ≦ 16</li>\n<li>0 ＜ <code class=\"language-text\">t</code> ≦ 1000</li>\n<li>2 ≦ <code class=\"language-text\">m</code> ≦ 100</li>\n<li>1 ≦ <code class=\"language-text\">p</code> ≦ m</li>\n</ul>\n<h4>출력 형식</h4>\n<p>튜브가 말해야 하는 숫자 <code class=\"language-text\">t</code>개를 공백 없이 차례대로 나타낸 문자열.<br>\n단, <code class=\"language-text\">10~15</code>는 각각 대문자 <code class=\"language-text\">A~F</code>로 출력한다.</p>\n<h4>입출력 예제</h4>\n<table>\n<thead>\n<tr>\n<th align=\"left\">n</th>\n<th align=\"left\">t</th>\n<th align=\"left\">m</th>\n<th align=\"left\">p</th>\n<th align=\"left\">result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">2</td>\n<td align=\"left\">4</td>\n<td align=\"left\">2</td>\n<td align=\"left\">1</td>\n<td align=\"left\">“0111”</td>\n</tr>\n<tr>\n<td align=\"left\">16</td>\n<td align=\"left\">16</td>\n<td align=\"left\">2</td>\n<td align=\"left\">1</td>\n<td align=\"left\">“02468ACE11111111”</td>\n</tr>\n<tr>\n<td align=\"left\">16</td>\n<td align=\"left\">16</td>\n<td align=\"left\">2</td>\n<td align=\"left\">2</td>\n<td align=\"left\">“13579BDF01234567”</td>\n</tr>\n</tbody>\n</table>\n<h2>문제 풀이 접근</h2>\n<ol>\n<li>\n<p>가장 먼저 10진수를 n진수로 변형하는 함수를 만들어야합니다.</p>\n<ul>\n<li>저는 재귀함수를 사용해서 만들었습니다.</li>\n</ul>\n</li>\n<li>각 참여자의 모든 턴에 대한 답안지(후보)를 <code class=\"language-text\">candidate</code>에 미리 저장합니다.</li>\n<li>현재 구해야하는 튜브의 시작 턴(p), 모든 참가 인원(m)을 가지고 튜브의 답(t개 만큼)을 answer에 저장하면 됩니다.</li>\n</ol>\n<h2>나의 코드</h2>\n<div class=\"gatsby-code-title\">Python</div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n  <span class=\"token comment\">#재귀함수 이용 - 10진수를 n진수로</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">convert</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      arr <span class=\"token operator\">=</span> <span class=\"token string\">\"0123456789ABCDEF\"</span>\n      q<span class=\"token punctuation\">,</span> r <span class=\"token operator\">=</span> <span class=\"token builtin\">divmod</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> base<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> q <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n          <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span>\n      <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n          <span class=\"token keyword\">return</span> convert<span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">,</span> base<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> arr<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span>\n\n  answer <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n  candidate <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n  <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>t<span class=\"token operator\">*</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      conv <span class=\"token operator\">=</span> convert<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> conv<span class=\"token punctuation\">:</span>\n          candidate<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> t<span class=\"token operator\">*</span>m<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      answer <span class=\"token operator\">+=</span> candidate<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n\n  <span class=\"token keyword\">return</span> answer</code></pre></div>\n<p>문제 링크 : <a href=\"https://programmers.co.kr/learn/courses/30/lessons/17687\">https://programmers.co.kr/learn/courses/30/lessons/17687</a></p>","frontmatter":{"title":"[프로그래머스] n진수 게임 - [3차] 2018 카카오 / Python","description":"","date":"2020.06.02","emoji":"📚","category":"algorithm"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/category/algorithm/2018-kakao/n진수게임/","relatedPosts":[{"node":{"fields":{"slug":"/category/algorithm/2018-kakao/캐시/"},"frontmatter":{"title":"[프로그래머스] 캐시 - [1차] 2018 카카오 / Python","date":"2020.05.30","emoji":"📚","category":"algorithm"}}}]}}}