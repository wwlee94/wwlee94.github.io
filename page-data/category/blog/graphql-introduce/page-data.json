{"componentChunkName":"component---src-templates-post-tsx","path":"/category/blog/graphql-introduce/","result":{"data":{"site":{"siteMetadata":{"title":"Blausee 기술 블로그","author":"wwlee94","siteUrl":"https://wwlee94.github.io"}},"markdownRemark":{"id":"b8327a64-a69d-5fb5-9190-af4921fe0828","excerpt":"📱 Write once, Use everywhere GraphQL 이란? ‘Graph Query Language…","html":"<div class=\"custom-block simple\"><div class=\"custom-block-heading\">📱 Write once, Use everywhere</div><div class=\"custom-block-body\"></div></div>\n<h2 id=\"graphql-이란\" style=\"position:relative;\"><a href=\"#graphql-%EC%9D%B4%EB%9E%80\" aria-label=\"graphql 이란 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GraphQL 이란?</h2>\n<p>‘Graph Query Language’의 약자로 <code class=\"language-text\">Facebook</code> 에서 만든 <code class=\"language-text\">Application Layer</code> 쿼리 언어이다.</p>\n<p>즉, 기존 <code class=\"language-text\">REST API</code> 의 <code class=\"language-text\">HTTP 통신</code> 과 동일하다 !</p>\n<p><code class=\"language-text\">GraphQL</code> 을 좀 더 간단하게 설명하면?!</p>\n<ul>\n<li>클라이언트에 필요한 <code class=\"language-text\">자원</code>을 더 <code class=\"language-text\">유연하게</code> 요청하고, 응답해주는 <code class=\"language-text\">HTTP</code> 통신</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/38131683/100873666-db38fe80-34e6-11eb-8f19-19e4ae086212.png\" alt=\"GraphQL 이미지\"></p>\n<h4 id=\"graphql-쿼리-언어의-디자인\" style=\"position:relative;\"><a href=\"#graphql-%EC%BF%BC%EB%A6%AC-%EC%96%B8%EC%96%B4%EC%9D%98-%EB%94%94%EC%9E%90%EC%9D%B8\" aria-label=\"graphql 쿼리 언어의 디자인 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GraphQL 쿼리 언어의 디자인</h4>\n<p><code class=\"language-text\">JSON</code> 응답의 <code class=\"language-text\">Key</code> 부분만 가져온 형태로 디자인됨</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token comment\"># GraphQL 쿼리 (gql)</span>\n<span class=\"token keyword\">query</span><span class=\"token punctuation\">{</span>\n  user<span class=\"token punctuation\">(</span><span class=\"token attr-name\">id</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    name\n    age\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-json line-numbers\"><code class=\"language-json\"><span class=\"token comment\">// JSON 응답 메시지</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"user\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"LEE WOO WON\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"age\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">23</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"rest-api-와-무엇이-다른걸까\" style=\"position:relative;\"><a href=\"#rest-api-%EC%99%80-%EB%AC%B4%EC%97%87%EC%9D%B4-%EB%8B%A4%EB%A5%B8%EA%B1%B8%EA%B9%8C\" aria-label=\"rest api 와 무엇이 다른걸까 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>REST API 와 무엇이 다른걸까?</h2>\n<p>먼저 <code class=\"language-text\">Facebook</code> 이 왜 기존 <code class=\"language-text\">REST API</code> 를 대체하려 하는지와 <code class=\"language-text\">REST API</code> 와 <code class=\"language-text\">GraphQL</code> 의 차이점을 알아보자.</p>\n<h4 id=\"rest-api-를-대체하려고-한-이유\" style=\"position:relative;\"><a href=\"#rest-api-%EB%A5%BC-%EB%8C%80%EC%B2%B4%ED%95%98%EB%A0%A4%EA%B3%A0-%ED%95%9C-%EC%9D%B4%EC%9C%A0\" aria-label=\"rest api 를 대체하려고 한 이유 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>REST API 를 대체하려고 한 이유</h4>\n<h5 id=\"rest-api-의-단점\" style=\"position:relative;\"><a href=\"#rest-api-%EC%9D%98-%EB%8B%A8%EC%A0%90\" aria-label=\"rest api 의 단점 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>REST API 의 단점</h5>\n<p>기존의 REST API는 다음와 같은 단점을 가집니다.</p>\n<ol>\n<li>\n<p><code class=\"language-text\">Over-fetching</code></p>\n<ul>\n<li>요청한 영역의 정보보다, 많은 정보를 서버에서 받게 되는 것</li>\n<li>즉, 프론트에서 필요한 정보만 딱 주는 것이 아니라 필요 없는 정보도 함께 받는 경우도 있다.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">Under-fetching</code></p>\n<ul>\n<li>REST에서 하나를 완성하려고 많은 소스를 요청하는 것</li>\n<li>즉, 1번의 콜이 아니라 여러개의 REST API 콜로 프론트에 필요한 정보를 가져오는 경우</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"rest-api와-graphql의-차이점\" style=\"position:relative;\"><a href=\"#rest-api%EC%99%80-graphql%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\" aria-label=\"rest api와 graphql의 차이점 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>REST API와 GraphQL의 차이점</h4>\n<h5 id=\"첫-번째-이유는-생산성-향상을-위함-\" style=\"position:relative;\"><a href=\"#%EC%B2%AB-%EB%B2%88%EC%A7%B8-%EC%9D%B4%EC%9C%A0%EB%8A%94-%EC%83%9D%EC%82%B0%EC%84%B1-%ED%96%A5%EC%83%81%EC%9D%84-%EC%9C%84%ED%95%A8-\" aria-label=\"첫 번째 이유는 생산성 향상을 위함  permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>첫 번째 이유는 생산성 향상을 위함 !</h5>\n<p>기존의 <code class=\"language-text\">REST API</code> 는 클라이언트의 각 요청에 따라 필요한 응답을 따로 서버 개발자에게 요구사항을 이야기하고 요구사항에 맞게 개발 후 응답을 보내주었다면 </p>\n<p><code class=\"language-text\">GraphQL</code> 을 사용하면 클라이언트가 원하는 응답을 위한 요청 쿼리를 날리면 데이터를 받을 수 있다.<br>\n→ 백엔드에서는 필요한 데이터를 내려주고, 저장하는 방식에만 집중하면 OK !</p>\n<p><code class=\"language-text\">GraphQL</code> 은 뷔페 / <code class=\"language-text\">REST API</code> 는 세트 메뉴와 같다.<br>\n뷔페는 먹고 싶은 것만 먹을 수 있지만,<br>\n세트 메뉴는 내가 필요하지 않은 것도 들어있다.</p>\n<p>이러한 이유로 <code class=\"language-text\">프론트엔드</code> 와 <code class=\"language-text\">백엔드</code> 와의 필요없는 의사소통에 의한 개발 비용을 줄일 수있어 생산성이 향상된다.</p>\n<h5 id=\"두-번째-이유는-퍼포먼스적-성능-향상을-위함-\" style=\"position:relative;\"><a href=\"#%EB%91%90-%EB%B2%88%EC%A7%B8-%EC%9D%B4%EC%9C%A0%EB%8A%94-%ED%8D%BC%ED%8F%AC%EB%A8%BC%EC%8A%A4%EC%A0%81-%EC%84%B1%EB%8A%A5-%ED%96%A5%EC%83%81%EC%9D%84-%EC%9C%84%ED%95%A8-\" aria-label=\"두 번째 이유는 퍼포먼스적 성능 향상을 위함  permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>두 번째 이유는 퍼포먼스적 성능 향상을 위함 !</h5>\n<p>예를 들어, <code class=\"language-text\">회원</code>, <code class=\"language-text\">포스트</code>, <code class=\"language-text\">팔로워</code> 정보를 서버로 요청하고 싶은 경우</p>\n<p><code class=\"language-text\">REST API</code> 의 경우 원하는 데이터를 받기 위해 3번의 API 호출이 필요하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"markdown\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-markdown line-numbers\"><code class=\"language-markdown\">/users/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span><span class=\"token punctuation\">></span></span> : 회원 정보 요청\n/users/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span><span class=\"token punctuation\">></span></span>/posts : 회원이 등록한 게시글 요청\n/users/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span><span class=\"token punctuation\">></span></span>/followers : 회원을 팔로우하는 유저 정보</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>반면에, <code class=\"language-text\">GraphQL</code> 의 경우 1번의 API 호출로 원하는 정보를 모두 가져올 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-graphql line-numbers\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span><span class=\"token punctuation\">{</span>\n  user<span class=\"token punctuation\">(</span><span class=\"token attr-name\">id</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    name\n    posts<span class=\"token punctuation\">{</span>\n      title\n    <span class=\"token punctuation\">}</span>\n    followers<span class=\"token punctuation\">(</span><span class=\"token attr-name\">last</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      name\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"그럼-graphql은-rest-api를-완전히-대체할까\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%9F%BC-graphql%EC%9D%80-rest-api%EB%A5%BC-%EC%99%84%EC%A0%84%ED%9E%88-%EB%8C%80%EC%B2%B4%ED%95%A0%EA%B9%8C\" aria-label=\"그럼 graphql은 rest api를 완전히 대체할까 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그럼 GraphQL은 REST API를 완전히 대체할까?</h2>\n<div class=\"custom-block info\"><div class=\"custom-block-heading\">완전히 대체하기엔 GraphQL의 단점도 존재</div><div class=\"custom-block-body\"></div></div>\n<ol>\n<li>File 전송 등 Text 만으로는 하기 힘든 내용들을 처리하기 복잡하다.</li>\n<li>고정된 요청과 응답만 필요할 경우엔 <code class=\"language-text\">Query</code>로 인해 요청의 크기가 <code class=\"language-text\">REST API</code>경우보다 더 커진다.</li>\n<li>캐싱 처리</li>\n<li>프론트엔드 개발자가 Query 요청 문법을 배워야하는점</li>\n</ol>\n<h4 id=\"그렇다면-graphql-or-rest-api-어떤-것\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%A0%87%EB%8B%A4%EB%A9%B4-graphql-or-rest-api-%EC%96%B4%EB%96%A4-%EA%B2%83\" aria-label=\"그렇다면 graphql or rest api 어떤 것 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그렇다면 GraphQL or REST API 어떤 것?</h4>\n<p>어떤 기술이 좋다고 얘기 할 수 없으니 상황에 따라 각각의 <code class=\"language-text\">장점</code>, <code class=\"language-text\">단점</code> 에 따라서 적합한 기술을 사용하는 것이 현명 !</p>\n<p>그러나 더 중요한 것은, <strong><em>둘 중 하나를 선택할 필요는 없다는 것..!</em></strong></p>\n<p>이상입니다-!</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/category/blog/graphql-introduce/#graphql-%EC%9D%B4%EB%9E%80\">GraphQL 이란?</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/category/blog/graphql-introduce/#graphql-%EC%BF%BC%EB%A6%AC-%EC%96%B8%EC%96%B4%EC%9D%98-%EB%94%94%EC%9E%90%EC%9D%B8\">GraphQL 쿼리 언어의 디자인</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/category/blog/graphql-introduce/#rest-api-%EC%99%80-%EB%AC%B4%EC%97%87%EC%9D%B4-%EB%8B%A4%EB%A5%B8%EA%B1%B8%EA%B9%8C\">REST API 와 무엇이 다른걸까?</a></p>\n<ul>\n<li>\n<ul>\n<li>\n<p><a href=\"/category/blog/graphql-introduce/#rest-api-%EB%A5%BC-%EB%8C%80%EC%B2%B4%ED%95%98%EB%A0%A4%EA%B3%A0-%ED%95%9C-%EC%9D%B4%EC%9C%A0\">REST API 를 대체하려고 한 이유</a></p>\n<ul>\n<li><a href=\"/category/blog/graphql-introduce/#rest-api-%EC%9D%98-%EB%8B%A8%EC%A0%90\">REST API 의 단점</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/category/blog/graphql-introduce/#rest-api%EC%99%80-graphql%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\">REST API와 GraphQL의 차이점</a></p>\n<ul>\n<li><a href=\"/category/blog/graphql-introduce/#%EC%B2%AB-%EB%B2%88%EC%A7%B8-%EC%9D%B4%EC%9C%A0%EB%8A%94-%EC%83%9D%EC%82%B0%EC%84%B1-%ED%96%A5%EC%83%81%EC%9D%84-%EC%9C%84%ED%95%A8-\">첫 번째 이유는 생산성 향상을 위함 !</a></li>\n<li><a href=\"/category/blog/graphql-introduce/#%EB%91%90-%EB%B2%88%EC%A7%B8-%EC%9D%B4%EC%9C%A0%EB%8A%94-%ED%8D%BC%ED%8F%AC%EB%A8%BC%EC%8A%A4%EC%A0%81-%EC%84%B1%EB%8A%A5-%ED%96%A5%EC%83%81%EC%9D%84-%EC%9C%84%ED%95%A8-\">두 번째 이유는 퍼포먼스적 성능 향상을 위함 !</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/category/blog/graphql-introduce/#%EA%B7%B8%EB%9F%BC-graphql%EC%9D%80-rest-api%EB%A5%BC-%EC%99%84%EC%A0%84%ED%9E%88-%EB%8C%80%EC%B2%B4%ED%95%A0%EA%B9%8C\">그럼 GraphQL은 REST API를 완전히 대체할까?</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/category/blog/graphql-introduce/#%EA%B7%B8%EB%A0%87%EB%8B%A4%EB%A9%B4-graphql-or-rest-api-%EC%96%B4%EB%96%A4-%EA%B2%83\">그렇다면 GraphQL or REST API 어떤 것?</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[GraphQL] GraphQL에 대해서","description":"","date":"2020.11.25","emoji":"📘","category":"blog"}}},"pageContext":{"slug":"/category/blog/graphql-introduce/","relatedPosts":[{"node":{"fields":{"slug":"/category/blog/spring/redis/spring-data-redis-version-issue/"},"frontmatter":{"title":"[Spring] Spring Boot 2.3.2.RELEASE 버전 Redis 이슈","date":"2020.11.20","emoji":"❓","category":"blog"}}},{"node":{"fields":{"slug":"/category/blog/spring-transactional-precautions/"},"frontmatter":{"title":"[Spring] @Transactional 사용 시 주의점과 JPQL 주의점","date":"2020.11.14","emoji":"🚧","category":"blog"}}},{"node":{"fields":{"slug":"/category/blog/spring-jpa-one-to-many-save-issue/"},"frontmatter":{"title":"[Spring JPA] 1:N 관계 엔티티 save시 update 쿼리가 추가로 발생하는 이슈","date":"2020.09.25","emoji":"💭","category":"blog"}}},{"node":{"fields":{"slug":"/category/blog/aws-eb-deploy/"},"frontmatter":{"title":"[AWS EB] AWS Elastic Beanstalk로 서버 배포 하기","date":"2020.09.02","emoji":"🚀","category":"blog"}}}]}}}