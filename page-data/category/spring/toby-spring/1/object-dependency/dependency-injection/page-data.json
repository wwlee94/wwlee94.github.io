{"componentChunkName":"component---src-templates-post-tsx","path":"/category/spring/toby-spring/1/object-dependency/dependency-injection/","result":{"data":{"site":{"siteMetadata":{"title":"Blausee 기술 블로그","author":"wwlee94","siteUrl":"https://wwlee94.github.io"}},"markdownRemark":{"id":"afba4162-8a83-5b48-abeb-a117c26e69ce","excerpt":"의존관계 주입(DI) 제어의 역전(IoC)과 의존관계 주입(DI) IoC 는 매우 폭 넓게 사용되는 용어이고 스프링이 제공하는 IoC 동작 방식을 구체화하면 이 더 명확합니다. DI…","html":"<h2 id=\"의존관계-주입di\" style=\"position:relative;\"><a href=\"#%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84-%EC%A3%BC%EC%9E%85di\" aria-label=\"의존관계 주입di permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>의존관계 주입(DI)</h2>\n<h4 id=\"제어의-역전ioc과-의존관계-주입di\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%EC%96%B4%EC%9D%98-%EC%97%AD%EC%A0%84ioc%EA%B3%BC-%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84-%EC%A3%BC%EC%9E%85di\" aria-label=\"제어의 역전ioc과 의존관계 주입di permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제어의 역전(IoC)과 의존관계 주입(DI)</h4>\n<p>IoC 는 매우 폭 넓게 사용되는 용어이고 스프링이 제공하는 IoC 동작 방식을 구체화하면 <code class=\"language-text\">의존관계 주입(DI)</code>이 더 명확합니다.</p>\n<p>DI는 오브젝트를 오브젝트에 주입하는 동작이 아닌 <code class=\"language-text\">오브젝트 레퍼런스를 외부로부터</code> 제공받는 것입니다.</p>\n<h4 id=\"런타임-의존관계-설정\" style=\"position:relative;\"><a href=\"#%EB%9F%B0%ED%83%80%EC%9E%84-%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84-%EC%84%A4%EC%A0%95\" aria-label=\"런타임 의존관계 설정 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>런타임 의존관계 설정</h4>\n<p><strong>의존 관계란 ?</strong></p>\n<p><code class=\"language-text\">A -&gt; B</code> 라는 관계에서 A는 B에 의존한다고 말합니다.</p>\n<p>즉, B가 변하면 A에 영향을 미치는 관계일 때 의존한다고 합니다.</p>\n<p>반대로, ‘B는 A에 의존하지 않는다’도 맞는 말입니다.</p>\n<p><strong>의존 관계의 조건</strong></p>\n<p>책에서는 이러한 <code class=\"language-text\">직접적인 의존 관계</code>를 없애려고 노력합니다.</p>\n<p>요구사항이 바뀔 때마다, 업데이트 될 때마다 <code class=\"language-text\">서로가 서로에게 영향</code>을 주기 때문에 비용이 큽니다.<br>\n(결합도가 높음)</p>\n<p>따라서, 의존관계 주입은 다음과 같은 조건을 만족해야합니다.</p>\n<ol>\n<li>\n<p>코드에는 런타임 시점의 의존관계가 드러나지 않아야합니다.</p>\n<ul>\n<li>즉, <code class=\"language-text\">인터페이스</code>에만 의존하고 있어야합니다.</li>\n</ul>\n</li>\n<li>런타임 시점의 의존관계는 컨테이너 or 팩토리 같은 <code class=\"language-text\">제 3의 존재</code>가 결정합니다.</li>\n<li>의존관계는 사용할 오브젝트의 레퍼런스를 주입해줌으로써 만들어집니다.</li>\n</ol>\n<p><code class=\"language-text\">DI</code>는 자신이 사용할 오브젝트에 대한 선택과 생성을 외부로 넘기고 자신은 수동적으로 주입받는 오브젝트를 사용한다는 점에서 IoC 개념과 잘 들어맞는다.</p>\n<h4 id=\"di의-장점\" style=\"position:relative;\"><a href=\"#di%EC%9D%98-%EC%9E%A5%EC%A0%90\" aria-label=\"di의 장점 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DI의 장점</h4>\n<ul>\n<li>\n<p>인터페이스를 통해 <code class=\"language-text\">결합도가 낮은</code> 코드를 만들 수 있습니다.</p>\n<ul>\n<li>결합도가 낮은 코드는 <code class=\"language-text\">변경을 통한 확장에 자유롭다</code>는 장점을 가져옵니다.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">관심사의 분리(SoC)</code>를 통해 얻어지는 <code class=\"language-text\">높은 응집도</code>를 가질 수 있습니다.</p>\n<ul>\n<li>높은 응집도는 <code class=\"language-text\">서로 독립적으로 작용</code>한다는 의미이므로 유지보수 비용이 낮아집니다.</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"메소드를-통한-의존관계-주입\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EC%86%8C%EB%93%9C%EB%A5%BC-%ED%86%B5%ED%95%9C-%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84-%EC%A3%BC%EC%9E%85\" aria-label=\"메소드를 통한 의존관계 주입 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메소드를 통한 의존관계 주입</h4>\n<p>보통 DI 해주는 3가지 방법이 있습니다.</p>\n<ol>\n<li>생성자 메소드를 이용한 주입</li>\n<li>\n<p>수정자 메소드(Setter)를 이용한 주입 (* <strong>주로 사용</strong>)</p>\n<blockquote>\n<p>의존 설정으로 XML을 사용하는 경우 자바빈 규약을 따르는 수정자 메소드가 가장 편리하다.</p>\n</blockquote>\n</li>\n<li>\n<p>일반 메소드를 이용한 주입</p>\n<blockquote>\n<p>한 번에 여러개 파라미터를 받거나 하는 장점</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<p>이상으로 다음 포스팅은 <code class=\"language-text\">XML을 이용한 설정</code>에 대해서 알아보겠습니다 🙇🏻‍♂️</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/category/spring/toby-spring/1/object-dependency/dependency-injection/#%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84-%EC%A3%BC%EC%9E%85di\">의존관계 주입(DI)</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/category/spring/toby-spring/1/object-dependency/dependency-injection/#%EC%A0%9C%EC%96%B4%EC%9D%98-%EC%97%AD%EC%A0%84ioc%EA%B3%BC-%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84-%EC%A3%BC%EC%9E%85di\">제어의 역전(IoC)과 의존관계 주입(DI)</a></li>\n<li><a href=\"/category/spring/toby-spring/1/object-dependency/dependency-injection/#%EB%9F%B0%ED%83%80%EC%9E%84-%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84-%EC%84%A4%EC%A0%95\">런타임 의존관계 설정</a></li>\n<li><a href=\"/category/spring/toby-spring/1/object-dependency/dependency-injection/#di%EC%9D%98-%EC%9E%A5%EC%A0%90\">DI의 장점</a></li>\n<li><a href=\"/category/spring/toby-spring/1/object-dependency/dependency-injection/#%EB%A9%94%EC%86%8C%EB%93%9C%EB%A5%BC-%ED%86%B5%ED%95%9C-%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84-%EC%A3%BC%EC%9E%85\">메소드를 통한 의존관계 주입</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/category/spring/toby-spring/1/object-dependency/dependency-injection/#%EB%A7%88%EB%AC%B4%EB%A6%AC\">마무리</a></li>\n</ul>","frontmatter":{"title":"[토비의 스프링] 1. 오브젝트와 의존관계 - 의존관계 주입(DI)","description":"","date":"2020.06.13","emoji":"📲","category":"spring"}}},"pageContext":{"slug":"/category/spring/toby-spring/1/object-dependency/dependency-injection/","relatedPosts":[{"node":{"fields":{"slug":"/category/spring/toby-spring/1/object-dependency/xml-di-setting/"},"frontmatter":{"title":"[토비의 스프링] 1. 오브젝트와 의존관계 - XML을 이용한 DI 설정","date":"2020.06.14","emoji":"📲","category":"spring"}}},{"node":{"fields":{"slug":"/category/spring/toby-spring/1/object-dependency/singleton-registry/"},"frontmatter":{"title":"[토비의 스프링] 1. 오브젝트와 의존관계 - 싱글톤 레지스트리와 오브젝트 스코프","date":"2020.06.11","emoji":"🔭","category":"spring"}}},{"node":{"fields":{"slug":"/category/spring/toby-spring/1/object-dependency/spring-ioc/"},"frontmatter":{"title":"[토비의 스프링] 1. 오브젝트와 의존관계 - 스프링의 IoC","date":"2020.06.10","emoji":"📖","category":"spring"}}}]}}}