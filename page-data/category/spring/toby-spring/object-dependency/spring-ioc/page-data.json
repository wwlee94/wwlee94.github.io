{"componentChunkName":"component---src-templates-post-tsx","path":"/category/spring/toby-spring/object-dependency/spring-ioc/","result":{"data":{"site":{"siteMetadata":{"title":"Blausee 기술 블로그","author":"wwlee94","siteUrl":"https://wwlee94.github.io"}},"markdownRemark":{"id":"9417e387-6673-51e4-be70-3f86bc9aa8d7","excerpt":"스프링의 IoC 스프링은 애플리케이션 개발의 다양한 영역과 기술에 관여하고 많은 기능을 제공합니다. 하지만, 스프링의 핵심을 담당하는 것은  또는 이 스프링의 핵심입니다. 이 두가지는 가 하는 일을 더 일반화 시킨 버전입니다. Factory…","html":"<h2 id=\"스프링의-ioc\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81%EC%9D%98-ioc\" aria-label=\"스프링의 ioc permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스프링의 IoC</h2>\n<p>스프링은 애플리케이션 개발의 다양한 영역과 기술에 관여하고 많은 기능을 제공합니다.</p>\n<p>하지만, 스프링의 핵심을 담당하는 것은 <code class=\"language-text\">빈 팩토리</code> 또는 <code class=\"language-text\">애플리케이션 컨텍스트</code>이 스프링의 핵심입니다.<br>\n이 두가지는 <code class=\"language-text\">DaoFactory</code>가 하는 일을 더 일반화 시킨 버전입니다.</p>\n<blockquote>\n<p>Factory의 역할 : 애플리케이션의 설계도 역할</p>\n</blockquote>\n<p>컴포넌트를 생성한다던지, 의존 관계를 맺어주는 등등 ..</p>\n<h2 id=\"오브젝트-팩토리를-이용한-스프링-ioc\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%B8%8C%EC%A0%9D%ED%8A%B8-%ED%8C%A9%ED%86%A0%EB%A6%AC%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%8A%A4%ED%94%84%EB%A7%81-ioc\" aria-label=\"오브젝트 팩토리를 이용한 스프링 ioc permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오브젝트 팩토리를 이용한 스프링 IoC</h2>\n<h4 id=\"애플리케이션-컨텍스트와-설정-정보\" style=\"position:relative;\"><a href=\"#%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8%EC%99%80-%EC%84%A4%EC%A0%95-%EC%A0%95%EB%B3%B4\" aria-label=\"애플리케이션 컨텍스트와 설정 정보 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>애플리케이션 컨텍스트와 설정 정보</h4>\n<p>스프링에서는 스프링이 <code class=\"language-text\">제어권 + 관계</code>를 부여하는 객체를 <code class=\"language-text\">빈(bean)</code>이라고 부릅니다.<br>\n동시에, <code class=\"language-text\">빈의 생성</code>과 <code class=\"language-text\">관계 설정</code>과 같은 제어를 담당하는 IoC 객체를 <code class=\"language-text\">빈 팩토리(bean factory)</code>라고 부르며 보통 빈 팩토리 보다는 <code class=\"language-text\">애플리케이션 컨텍스트</code>를 주로 사용합니다.</p>\n<div class=\"custom-block info\"><div class=\"custom-block-heading\">애플리케이션 컨텍스트란 ?</div><div class=\"custom-block-body\"><p>IoC 방식을 따라 확장된 일종의 빈 팩토리<br>\n두 가지가 앞으로 동일하다고 생각하면 OK !</p></div></div>\n<p><code class=\"language-text\">애플리케이션 컨텍스트</code>는 설정 정보, 관계 정보 등을 직접 담고 있지는 않습니다.<br>\n대신, 별도로 설정 정보를 담고 있는 무엇인가를 가져와 이를 활용하는 범용적인 IoC 엔진이라고 볼 수 있다.</p>\n<blockquote>\n<p>별도의 설정 정보 : 자바 코드의 <code class=\"language-text\">@Configuration</code> or <code class=\"language-text\">XML 설정</code> 파일</p>\n</blockquote>\n<h4 id=\"daofactory를-사용하는-애플리케이션-컨텍스트\" style=\"position:relative;\"><a href=\"#daofactory%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8\" aria-label=\"daofactory를 사용하는 애플리케이션 컨텍스트 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DaoFactory를 사용하는 애플리케이션 컨텍스트</h4>\n<p><code class=\"language-text\">애플리케이션 컨텍스트</code>가 사용할 설정 정보를 담은 <code class=\"language-text\">DaoFactory</code></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Bean</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Configuration</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Configuration</span> <span class=\"token comment\">// 애플리케이션 컨텍스트가 사용할 설정 정보라는 어노테이션</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DaoFactory</span><span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@Bean</span> <span class=\"token comment\">// 오브젝트 생성을 담당하는 IoC용 메소드</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">UserDao</span> <span class=\"token function\">userDao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserDao</span><span class=\"token punctuation\">(</span><span class=\"token function\">connectionMaker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token annotation punctuation\">@Bean</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">ConnectionMaker</span> <span class=\"token function\">connectionMaker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DConnectionMaker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 개발 전용</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>애플리케이션 컨텍스트를 적용한 코드</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserDaoTest</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ClassNotFoundException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">SQLException</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">ApplicationContext</span> context <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnnotationConfigApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DaoFactory</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 위에서 등록한 @Bean 메서드의 이름으로 요청</span>\n    <span class=\"token class-name\">UserDao</span> dao <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"userDao\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">UserDao</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id=\"오브젝트-팩토리-vs-애플리케이션-컨텍스트\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%B8%8C%EC%A0%9D%ED%8A%B8-%ED%8C%A9%ED%86%A0%EB%A6%AC-vs-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8\" aria-label=\"오브젝트 팩토리 vs 애플리케이션 컨텍스트 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오브젝트 팩토리 VS 애플리케이션 컨텍스트</h4>\n<p>기존의 <code class=\"language-text\">오브젝트 팩토리</code> 방식과 스프링의 <code class=\"language-text\">애플리케이션 컨텍스트</code> 방식을 비교해보자.</p>\n<ol>\n<li>\n<p><strong>오브젝트 팩토리</strong></p>\n<ul>\n<li>객체를 생성해주고 관계를 맺어주는 제한적인 역할만</li>\n</ul>\n</li>\n<li>\n<p><strong>애플리케이션 컨텍스트</strong></p>\n<ul>\n<li>애플리케이션에서 IoC를 적용해서 관리할 모든 객체에 대한 생성과 관계 설정을 담당</li>\n<li>단, 직접적으로 맺어주는 코드는 없고 별도의 설정 정보를 통해 얻습니다.</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"빈-팩토리-vs-애플리케이션-컨텍스트\" style=\"position:relative;\"><a href=\"#%EB%B9%88-%ED%8C%A9%ED%86%A0%EB%A6%AC-vs-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8\" aria-label=\"빈 팩토리 vs 애플리케이션 컨텍스트 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>빈 팩토리 VS 애플리케이션 컨텍스트</h4>\n<ol>\n<li>\n<p><strong>빈 팩토리</strong></p>\n<ul>\n<li>클라이언트가 요청할 때 되서야 <code class=\"language-text\">Lazy</code> 하게 요청을 처리힙니다.</li>\n</ul>\n</li>\n<li>\n<p><strong>애플리케이션 컨텍스트</strong></p>\n<ul>\n<li>빈을 미리 <code class=\"language-text\">Eager</code> 하게 생성한 뒤 클라이언트가 요청할 때 준비된 오브젝트를 반환합니다.</li>\n</ul>\n</li>\n</ol>\n<h5 id=\"애플리케이션-컨텍스트-내부-동작-과정\" style=\"position:relative;\"><a href=\"#%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8-%EB%82%B4%EB%B6%80-%EB%8F%99%EC%9E%91-%EA%B3%BC%EC%A0%95\" aria-label=\"애플리케이션 컨텍스트 내부 동작 과정 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>애플리케이션 컨텍스트 내부 동작 과정</h5>\n<ol>\n<li><code class=\"language-text\">DaoFactory</code>를 설정정보로 등록한 뒤 <code class=\"language-text\">@Bean</code>이 붙은 메소드의 이름을 가져와 <code class=\"language-text\">Bean 목록</code>을 만듭니다.</li>\n<li>클라에서 <code class=\"language-text\">getBean()</code>으로 이름이 자신의 빈 목록에 있는지 확인합니다.</li>\n<li>있다면, 빈 객체를 생성한 뒤 or 가지고 있는 객체를 클라에게 return합니다.</li>\n</ol>\n<h5 id=\"애플리케이션-컨텍스트의-장점\" style=\"position:relative;\"><a href=\"#%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8%EC%9D%98-%EC%9E%A5%EC%A0%90\" aria-label=\"애플리케이션 컨텍스트의 장점 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>애플리케이션 컨텍스트의 장점</h5>\n<ol>\n<li>\n<p>클라이언트는 구체적인 팩토리 클래스를 알 필요가 없습니다.</p>\n<ul>\n<li>또, 설정을 자바 코드가 아닌 XML로 설정 가능 (관심사 분리)</li>\n</ul>\n</li>\n<li>\n<p>종합 IoC 서비스를 제공해줍니다.</p>\n<ul>\n<li>생성, 관계 설정 뿐 아니라 객체가 생성되는 방식, 전략, 자동 생성, 객체의 후처리 등등을 제공</li>\n</ul>\n</li>\n<li>빈을 검색하는 다양한 방법을 제공합니다.</li>\n</ol>\n<h4 id=\"스프링-ioc-용어-정리\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-ioc-%EC%9A%A9%EC%96%B4-%EC%A0%95%EB%A6%AC\" aria-label=\"스프링 ioc 용어 정리 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스프링 IoC 용어 정리</h4>\n<p>기본적으로 비슷한 개념을 가진 다양한 용어가 혼용되므로 정리해보면</p>\n<h5 id=\"빈bean-\" style=\"position:relative;\"><a href=\"#%EB%B9%88bean-\" aria-label=\"빈bean  permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>빈(bean) ?</h5>\n<p><code class=\"language-text\">스프링이 IoC 방식으로 관리하는 객체</code></p>\n<p>단, 모든 객체가 아닌 스프링이 직접 그 <code class=\"language-text\">생성과 제어를 담당하는 객체만</code> 빈이라고 부릅니다.</p>\n<h5 id=\"빈-팩토리bean-factory-\" style=\"position:relative;\"><a href=\"#%EB%B9%88-%ED%8C%A9%ED%86%A0%EB%A6%ACbean-factory-\" aria-label=\"빈 팩토리bean factory  permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>빈 팩토리(bean factory) ?</h5>\n<p><code class=\"language-text\">스프링의 IoC를 담당하는 핵심 컨테이너</code></p>\n<p>보통은 ‘빈 팩토리’를 바로 사용하지 않고 이를 확장한 ‘애플리케이션 컨텍스트’를 사용합니다.</p>\n<h5 id=\"애플리케이션-컨텍스트application-context\" style=\"position:relative;\"><a href=\"#%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8application-context\" aria-label=\"애플리케이션 컨텍스트application context permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>애플리케이션 컨텍스트(application context)</h5>\n<p><code class=\"language-text\">빈 팩토리를 확장한 IoC 컨테이너</code></p>\n<p>‘빈 팩토리’라고 부를 때는 빈의 생성과 제어 관점</p>\n<p>‘애플리케이션 컨텍스트’라고 부를 때는 스프링이 제공하는 애플리케이션 기능을 모두 포함한 관점</p>\n<h5 id=\"컨테이너-또는-ioc-컨테이너-container\" style=\"position:relative;\"><a href=\"#%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EB%98%90%EB%8A%94-ioc-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-container\" aria-label=\"컨테이너 또는 ioc 컨테이너 container permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컨테이너 또는 IoC 컨테이너 (container)</h5>\n<p><code class=\"language-text\">IoC 방식으로 빈을 관리한다</code>는 의미에서 ‘애플리케이션 컨텍스트’나 ‘빈 팩토리’를 <code class=\"language-text\">컨테이너</code> 또는 <code class=\"language-text\">IoC 컨테이너</code>라고도 합니다.</p>\n<p>보통 ‘컨테이너’ 또는 ‘스프링 컨테이너’라고 할 때는 ‘애플리케이션 컨텍스트’를 의미하는 것으로 보면 됩니다.</p>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<p>이상으로 다음 포스팅은 <code class=\"language-text\">싱글톤 레지스트리</code>에 대해서 알아보겠습니다 🙇🏻‍♂️</p>","tableOfContents":"<ul>\n<li><a href=\"/category/spring/toby-spring/object-dependency/spring-ioc/#%EC%8A%A4%ED%94%84%EB%A7%81%EC%9D%98-ioc\">스프링의 IoC</a></li>\n<li>\n<p><a href=\"/category/spring/toby-spring/object-dependency/spring-ioc/#%EC%98%A4%EB%B8%8C%EC%A0%9D%ED%8A%B8-%ED%8C%A9%ED%86%A0%EB%A6%AC%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EC%8A%A4%ED%94%84%EB%A7%81-ioc\">오브젝트 팩토리를 이용한 스프링 IoC</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/category/spring/toby-spring/object-dependency/spring-ioc/#%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8%EC%99%80-%EC%84%A4%EC%A0%95-%EC%A0%95%EB%B3%B4\">애플리케이션 컨텍스트와 설정 정보</a></li>\n<li><a href=\"/category/spring/toby-spring/object-dependency/spring-ioc/#daofactory%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8\">DaoFactory를 사용하는 애플리케이션 컨텍스트</a></li>\n<li><a href=\"/category/spring/toby-spring/object-dependency/spring-ioc/#%EC%98%A4%EB%B8%8C%EC%A0%9D%ED%8A%B8-%ED%8C%A9%ED%86%A0%EB%A6%AC-vs-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8\">오브젝트 팩토리 VS 애플리케이션 컨텍스트</a></li>\n<li>\n<p><a href=\"/category/spring/toby-spring/object-dependency/spring-ioc/#%EB%B9%88-%ED%8C%A9%ED%86%A0%EB%A6%AC-vs-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8\">빈 팩토리 VS 애플리케이션 컨텍스트</a></p>\n<ul>\n<li><a href=\"/category/spring/toby-spring/object-dependency/spring-ioc/#%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8-%EB%82%B4%EB%B6%80-%EB%8F%99%EC%9E%91-%EA%B3%BC%EC%A0%95\">애플리케이션 컨텍스트 내부 동작 과정</a></li>\n<li><a href=\"/category/spring/toby-spring/object-dependency/spring-ioc/#%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8%EC%9D%98-%EC%9E%A5%EC%A0%90\">애플리케이션 컨텍스트의 장점</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/category/spring/toby-spring/object-dependency/spring-ioc/#%EC%8A%A4%ED%94%84%EB%A7%81-ioc-%EC%9A%A9%EC%96%B4-%EC%A0%95%EB%A6%AC\">스프링 IoC 용어 정리</a></p>\n<ul>\n<li><a href=\"/category/spring/toby-spring/object-dependency/spring-ioc/#%EB%B9%88bean-\">빈(bean) ?</a></li>\n<li><a href=\"/category/spring/toby-spring/object-dependency/spring-ioc/#%EB%B9%88-%ED%8C%A9%ED%86%A0%EB%A6%ACbean-factory-\">빈 팩토리(bean factory) ?</a></li>\n<li><a href=\"/category/spring/toby-spring/object-dependency/spring-ioc/#%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8application-context\">애플리케이션 컨텍스트(application context)</a></li>\n<li><a href=\"/category/spring/toby-spring/object-dependency/spring-ioc/#%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EB%98%90%EB%8A%94-ioc-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-container\">컨테이너 또는 IoC 컨테이너 (container)</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/category/spring/toby-spring/object-dependency/spring-ioc/#%EB%A7%88%EB%AC%B4%EB%A6%AC\">마무리</a></li>\n</ul>","frontmatter":{"title":"[토비의 스프링] 1. 오브젝트와 의존관계 - 스프링의 IoC","description":"스프링 IoC에 대하여","date":"2020.06.09","emoji":"📖","category":"spring"}}},"pageContext":{"slug":"/category/spring/toby-spring/object-dependency/spring-ioc/","relatedPosts":[{"node":{"fields":{"slug":"/category/spring/jpa-programming/chapter1-jpa-introduction/"},"frontmatter":{"title":"[JPA 프로그래밍] 1. JPA 소개","date":"2020.10.05","emoji":"🙌🏻","category":"spring"}}},{"node":{"fields":{"slug":"/category/spring/toby-spring/spring-core-technology/"},"frontmatter":{"title":"[토비의 스프링] 7. 스프링 핵심 기술의 응용","date":"2020.07.24","emoji":"🌟","category":"spring"}}},{"node":{"fields":{"slug":"/category/spring/toby-spring/aop/transaction-property/"},"frontmatter":{"title":"[토비의 스프링] 6-3. AOP - 트랜잭션 속성","date":"2020.07.20","emoji":"🧩","category":"spring"}}},{"node":{"fields":{"slug":"/category/spring/toby-spring/aop/basic-concept/"},"frontmatter":{"title":"[토비의 스프링] 6-2. AOP - 기본 용어","date":"2020.07.16","emoji":"📙","category":"spring"}}},{"node":{"fields":{"slug":"/category/spring/toby-spring/aop/unit-test-and-proxy/"},"frontmatter":{"title":"[토비의 스프링] 6-1. AOP - 단위 테스트와 프록시","date":"2020.07.11","emoji":"ℹ️","category":"spring"}}}]}}}